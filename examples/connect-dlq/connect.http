@baseUrl = http://localhost:8083

### Plugins
GET {{baseUrl}}/connector-plugins HTTP/1.1

### Create pageviews
PUT {{baseUrl}}/connectors/pageviews/config HTTP/1.1
Content-Type: application/json

{
    "connector.class": "io.confluent.kafka.connect.datagen.DatagenConnector",
    "kafka.topic": "pageviews",
    "quickstart": "pageviews",
    "max.interval": "50000",
    "value.converter": "io.confluent.connect.avro.AvroConverter",
    "value.converter.schema.registry.url": "http://schema-registry:8081",
    "iterations": 10
}

### GET STATUS
GET {{baseUrl}}/connectors/pageviews/status

### STOP
DELETE {{baseUrl}}/connectors/pageviews

### Create sink connector
PUT {{baseUrl}}/connectors/mariadb-sink/config HTTP/1.1
Content-Type: application/json

{
    "connector.class": "io.confluent.connect.jdbc.JdbcSinkConnector",
    "topics": "pageviews",
    "tasks.max": 1,
    "connection.url": "jdbc:mysql://mariadb:3306/DEMO",
    "connection.attempts": 5,
    "connection.user": "root",
    "connection.password": "root",
    "dialect.name": "MySqlDatabaseDialect",
    "insert.mode": "insert",
    "table.name.format": "${topic}",
    "pk.fields": "viewtime,userid,pageid",
    "auto.create": "true"
}

### GET STATUS
GET {{baseUrl}}/connectors/mariadb-sink/status

### STOP
DELETE {{baseUrl}}/connectors/mariadb-sink

### Create sink connector
PUT {{baseUrl}}/connectors/mariadb-sink/config HTTP/1.1
Content-Type: application/json

{
    "connector.class": "io.confluent.connect.jdbc.JdbcSinkConnector",
    "topics": "pageviews",
    "tasks.max": 1,
    "connection.url": "jdbc:mysql://mariadb:3306/DEMO",
    "connection.attempts": 5,
    "connection.user": "root",
    "connection.password": "root",
    "dialect.name": "MySqlDatabaseDialect",
    "insert.mode": "insert",
    "table.name.format": "${topic}",
    "pk.fields": "viewtime,userid,pageid",
    "auto.create": "true",
    "errors.tolerance": "all",
    "errors.deadletterqueue.topic.name": "dlq",
    "errors.deadletterqueue.topic.replication.factor": 1,
    "errors.deadletterqueue.context.headers.enable": "true"
}

### GET STATUS
GET {{baseUrl}}/connectors/mariadb-sink/config

### GET STATUS
GET {{baseUrl}}/connectors/mariadb-sink/status

### STOP
DELETE {{baseUrl}}/connectors/mariadb-sink

### GET STATUS
GET {{baseUrl}}/connectors/repl/status

### STOP
DELETE {{baseUrl}}/connectors/repl HTTP/1.1

### Create replicator instance
PUT {{baseUrl}}/connectors/repl/config HTTP/1.1
Content-Type: application/json

{
    "connector.class": "io.confluent.connect.replicator.ReplicatorSourceConnector",
    "offset.start": "consumer",
    "topic.whitelist": "pageviews",
    "src.value.converter": "io.confluent.connect.avro.AvroConverter",
    "src.value.converter.schema.registry.url": "http://schema-registry:8081",
    "value.converter": "io.confluent.connect.avro.AvroConverter",
    "value.converter.schema.registry.url": "http://schema-registry:8081",
    "src.kafka.bootstrap.servers": "kafka:9092",
    "src.consumer.group.id": "replicator-dc2-to-dc1-topic1",
    "src.kafka.timestamps.topic.replication.factor": 1,
    "src.kafka.timestamps.producer.confluent.monitoring.interceptor.bootstrap.servers": "kafka:9092",
    "dest.kafka.bootstrap.servers": "kafka:9092",
    "src.errors.log.enable": "true",
    "dest.errors.log.enable": "true",
    "errors.tolerance": "all",
    "errors.log.enable": "true",
    "errors.deadletterqueue.topic.name": "dlq-repl",
    "errors.deadletterqueue.topic.replication.factor": 1,
    "errors.deadletterqueue.context.headers.enable": "true",
    "confluent.topic.replication.factor": 1,
    "provenance.header.enable": "true",
    "topic.timestamp.type": "LogAppendTime",
    "topic.rename.format": "dc_${topic}",
    "tasks.max": "1"
}