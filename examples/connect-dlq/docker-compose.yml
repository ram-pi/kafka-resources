version: '3.8'
services:
    # ZOOKEEPER
    zookeeper:
      container_name: "zookeeper"
      image: confluentinc/cp-zookeeper:${CFLT_TAG}
      environment:
        ZOOKEEPER_CLIENT_PORT: 2181
        ZOOKEEPER_TICK_TIME: 2000
        # ENABLE 4LW COMMANDS FROM EVERYWHERE
        # ZOOKEEPER JMX MONITORING 
        KAFKA_JMX_HOSTNAME: localhost
        # ENABLE SASL 
        KAFKA_OPTS: "-Dzookeeper.4lw.commands.whitelist=*"
      ports:
        - 2181:2181
    
    # KAFKA BROKER
    kafka:
      container_name: "kafka"
      image: confluentinc/cp-server:${CFLT_TAG}
      hostname: kafka
      depends_on:
        - zookeeper
      environment:
        # KAFKA SECURITY CONFIGURATION  
        KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
        KAFKA_LISTENERS: "INTERNAL://:9092, EXTERNAL://:19092"
        KAFKA_ADVERTISED_LISTENERS: "INTERNAL://kafka:9092, EXTERNAL://localhost:19092"
        KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "INTERNAL:PLAINTEXT, EXTERNAL:PLAINTEXT"
        KAFKA_INTER_BROKER_LISTENER_NAME: "INTERNAL"
        # KAFKA BROKER ID
        KAFKA_BROKER_ID: "1"
        # KAFKA GENERAL CONFIGURATION
        KAFKA_DELETE_TOPIC_ENABLE: "true"
        KAFKA_OFFSETS_TOPIC_NUM_PARTITIONS: "1"
        KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: "1"
        KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
        KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 1
        CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
        # JMX METRICS
        JMX_PORT: 30001
      ports:
        - 19092:19092
        - 30001:30001
    
    schema-registry:
      image: confluentinc/cp-schema-registry:${CFLT_TAG}
      hostname: schema-registry
      container_name: schema-registry
      restart: always
      ports:
        - "8181:8081"
      environment:
        SCHEMA_REGISTRY_HOST_NAME: schema-registry
        SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: 'kafka:9092'
        SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081
        # JMX METRICS
        JMX_PORT: 40002

    # CONNECT 
    connect:
      image: confluentinc/cp-kafka-connect:${CFLT_TAG}
      hostname: connect
      container_name: connect
      # volumes:
      #   - ./connect-components:/usr/share/confluent-hub-components
      depends_on:
        - kafka
        - schema-registry
      ports:
        - "8083:8083"
      # command: 
      #   - bash
      #   - -c
      #   - |
      #     echo "Installing Connector"
      #     confluent-hub install --no-prompt confluentinc/kafka-connect-datagen:0.6.0
      #     confluent-hub install --no-prompt confluentinc/kafka-connect-jdbc:10.6.0
      #     #
      #     echo "Launching Kafka Connect worker"
      #     /etc/confluent/docker/run &
      #     #
      #     sleep infinity
      environment:
        CONNECT_REST_ADVERTISED_HOST_NAME: connect
        CONNECT_GROUP_ID: compose-connect-group
        CONNECT_CONFIG_STORAGE_TOPIC: docker-connect-configs
        CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
        CONNECT_OFFSET_FLUSH_INTERVAL_MS: 10000
        CONNECT_OFFSET_STORAGE_TOPIC: docker-connect-offsets
        CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
        CONNECT_STATUS_STORAGE_TOPIC: docker-connect-status
        CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1
        CONNECT_KEY_CONVERTER: org.apache.kafka.connect.storage.StringConverter
        CONNECT_VALUE_CONVERTER: io.confluent.connect.avro.AvroConverter
        CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: http://schema-registry:8081
        CONNECT_PLUGIN_PATH: "/usr/share/java,/usr/share/confluent-hub-components"
        CONNECT_LOG4J_LOGGERS: org.apache.zookeeper=ERROR,org.I0Itec.zkclient=ERROR,org.reflections=ERROR
        CONNECT_BOOTSTRAP_SERVERS: kafka:9092
        # JMX METRICS
        JMX_PORT: 40003
      volumes:
        - ./libs:/usr/share/confluent-hub-components
    
     # MARIADB
    mariadb:
        container_name: mariadb
        command: --binlog-format=ROW --log-bin
        ports:
            - '3306:3306'
        environment:
            - MARIADB_USER=user
            - MARIADB_PASSWORD=user
            - MARIADB_ROOT_PASSWORD=root
        image: 'mariadb:${MARIADB_TAG}'
        volumes:
          - ./dump/sl_dump_file.sql:/docker-entrypoint-initdb.d/sl_dump_file.sql