---
version: '3'
services:
  zookeeper1:
    image: confluentinc/cp-zookeeper:7.3.0
    hostname: zookeeper1
    container_name: zookeeper1
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: "2000"
      ZOOKEEPER_SERVERS: zookeeper1:2888:3888
  
  kafka1:
    image: confluentinc/cp-server:7.3.0
    hostname: kafka1
    container_name: kafka1
    depends_on:
      - zookeeper1
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper1:2181
      KAFKA_LISTENERS: PLAINTEXT://kafka1:19091, EXTERNAL://kafka1:9091
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka1:19091, EXTERNAL://localhost:9091
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_BROKER_RACK: rack-0
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: true
      # KAFKA_COMPRESSION_TYPE: gzip
    ports:
      - 9091:9091
  
  kafka2:
    image: confluentinc/cp-server:7.3.0
    hostname: kafka2
    container_name: kafka2
    depends_on:
      - zookeeper1
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: zookeeper1:2181
      KAFKA_LISTENERS: PLAINTEXT://kafka2:19092, EXTERNAL://kafka2:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka2:19092, EXTERNAL://localhost:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_BROKER_RACK: rack-1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: true
      # KAFKA_COMPRESSION_TYPE: gzip
    ports:
      - 9092:9092
  
  kafka3:
    image: confluentinc/cp-server:7.3.0
    hostname: kafka3
    container_name: kafka3
    depends_on:
      - zookeeper1
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_ZOOKEEPER_CONNECT: zookeeper1:2181
      KAFKA_LISTENERS: PLAINTEXT://kafka3:19093, EXTERNAL://kafka3:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka3:19093, EXTERNAL://localhost:9093
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_BROKER_RACK: rack-2
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: true
      # KAFKA_COMPRESSION_TYPE: gzip
    ports:
      - 9093:9093

  kafdrop:
    hostname: kafdrop
    container_name: kafdrop
    image: obsidiandynamics/kafdrop
    restart: "always"
    ports:
      - "9090:9000"
    environment:
      KAFKA_BROKERCONNECT: "kafka1:19091,kafka2:19092,kafka3:19093"
      JVM_OPTS: "-Xms16M -Xmx48M -Xss180K -XX:-TieredCompilation -XX:+UseStringDeduplication -noverify"
    depends_on:
      - "kafka1"
      - "kafka2"
      - "kafka3"

  # console:
  #   image: docker.redpanda.com/vectorized/console:latest
  #   hostname: console
  #   container_name: console
  #   restart: on-failure
  #   entrypoint: /bin/sh
  #   command: -c "echo \"$$CONSOLE_CONFIG_FILE\" > /tmp/config.yml; /app/console"
  #   environment:
  #     CONFIG_FILEPATH: /tmp/config.yml
  #     CONSOLE_CONFIG_FILE: |
  #       kafka:
  #         brokers: ["kafka1:19091","kafka2:19092","kafka3:19093"]
  #         schemaRegistry:
  #           enabled: false
  #           urls: ["http://schema-registry:8081"]
  #       connect:
  #         enabled: false
  #         clusters:
  #           - name: datagen
  #             url: http://connect:8083
  #   ports:
  #     - "8081:8080"
  #   depends_on:
  #     - kafka1
  #     - kafka2
  #     - kafka3
